- name: Atualizando repo
  raw: apt update

- name: "Instalando Pip3 se não existir na máquina local"
  apt:
    name: "python3-pip"

- name: "Criando infraestrutura (VPC,Subnets, SGs, RDS, ELB, AutoScaling, ECS, IAMs, ECR )"
  raw: aws cloudformation create-stack \
         --stack-name baseInfra \
         --template-body file://../CloudFormation/create_infra.yaml \
         --parameters ParameterKey=KeyPair,ParameterValue={{ KeyPair }} \
           ParameterKey=region,ParameterValue={{ region }} \
           ParameterKey=zone1,ParameterValue={{ zone1 }} \
           ParameterKey=zone2,ParameterValue={{ zone2 }} \
           ParameterKey=AMI,ParameterValue={{ AMI }} \
           ParameterKey=instanceType,ParameterValue={{ instanceType }} \
           ParameterKey=masterUserName,ParameterValue={{ masterUserName }} \
           ParameterKey=masterUserPassword,ParameterValue={{ masterUserPassword }} \
           ParameterKey=maxScalingSize,ParameterValue={{ maxScalingSize }} \
           ParameterKey=minScalingSize,ParameterValue={{ minScalingSize }} \
         --capabilities CAPABILITY_IAM


- name: "Instalando boto3"
  raw: pip3 install boto3

- name: "Instalando python3-mysqldb e o Docker"
  apt:
    name: {{ packages }} 
  vars:
    packages:
      - python3-mysqldb
      - docker

- name: Esperando a Stack ficar pronta
  raw: aws cloudformation wait stack-create-complete --stack-name baseInfra

- name: Pegando os outputs da Stack
  local_action: cloudformation_facts
                stack_name="baseInfra"
  register: stack

- name: "Adicionando a URL do Repo Front a file vars"
  local_action: lineinfile
    dest="roles/build_aplication/vars/main.yml"
    regexp={{ stack.ansible_facts.cloudformation.teste.stack_outputs.FrontRepo }}
    insertafter="FrontRepo"
    line="  {{ stack.ansible_facts.cloudformation.teste.stack_outputs.FrontRepo }}"

- name: "Adicionando a URL do Repo Back a file vars"
  local_action: lineinfile
    dest="roles/build_aplication/vars/main.yml"
    regexp={{ stack.ansible_facts.cloudformation.teste.stack_outputs.BackRepo }}
    insertafter="BackRepo"
    line="  {{ stack.ansible_facts.cloudformation.teste.stack_outputs.BackRepo }}"

- name: Instalando o DB e a Tabela no MySql
  mysql_db: name=preferences
            login_host={{ stack.RdsURL }} 
            login_password={{ masterUserPassword }}
            login_user={{ masterUserName }}
            login_port=3306
            state=import
            target=../mysql/seed.sql
