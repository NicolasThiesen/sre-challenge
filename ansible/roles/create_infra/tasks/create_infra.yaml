- name: Atualizando repo
  raw: apt update

- name: "Instalando Pip3 se não existir na máquina local"
  apt:
    name: "python3-pip"

- name: "Criando infraestrutura (VPC,Subnets, SGs, RDS, ELB, AutoScaling, ECS, IAMs, ECR )"
  raw: aws cloudformation create-stack \
         --stack-name baseInfra \
         --template-body file://../CloudFormation/create_infra.yaml \
         --parameters ParameterKey=KeyPair,ParameterValue={{ KeyPair }} \
           ParameterKey=region,ParameterValue={{ region }} \
           ParameterKey=zone1,ParameterValue={{ zone1 }} \
           ParameterKey=zone2,ParameterValue={{ zone2 }} \
           ParameterKey=AMI,ParameterValue={{ AMI }} \
           ParameterKey=instanceType,ParameterValue={{ instanceType }} \
           ParameterKey=masterUserName,ParameterValue={{ masterUserName }} \
           ParameterKey=masterUserPassword,ParameterValue={{ masterUserPassword }} \
           ParameterKey=maxScalingSize,ParameterValue={{ maxScalingSize }} \
           ParameterKey=minScalingSize,ParameterValue={{ minScalingSize }} \
         --capabilities CAPABILITY_IAM


- name: "Instalando boto3"
  raw: pip3 install boto3

- name: "Instalando python3-mysqldb e o Docker"
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - python3-mysqldb
      - docker

- name: Esperando a Stack ficar pronta
  raw: aws cloudformation wait stack-create-complete --stack-name baseInfra

- name: Pegando os outputs da Stack
  local_action: cloudformation_facts
                stack_name="baseInfra"
  register: stack

- name: "Adicionando a variáveis de ambiente no app back-end"
  raw: echo "SERVICE_PORT=3333\nMYSQL_HOST={{ stack.ansible_facts.cloudformation.baseInfra.stack_outputs.RdsURL }}\nMYSQL_USER={{ masterUserName }}\nMYSQL_PASSWORD={{ masterUserPassword }}\nMYSQL_DB=preferences" > "../back/.env" 

- name: "Adicionando a variáveis de ambiente no app back-end"
  raw: echo "SERVICE_PORT=80\nBACKEND_HOST={{ stack.ansible_facts.cloudformation.baseInfra.stack_outputs.LoadBalancerUrlBack }}\nBACKEND_PORT=3333" > "../front/.env"

- name: "Adicionando o comando para executar a criação do db e da tabela"
  local_action: lineinfile
    dest="roles/build_aplication/vars/main.yml"
    regexp={{ stack.ansible_facts.cloudformation.baseInfra.stack_outputs.RdsURL }}
    insertafter="Command"
    line='  mysql -u {{ masterUserName }} -p{{ masterUserPassword }} -h {{ stack.ansible_facts.cloudformation.baseInfra.stack_outputs.RdsURL }} -e "create database preferences; use preferences; create table preferences (id INT AUTO_INCREMENT PRIMARY KEY, ip VARCHAR(20), preference VARCHAR(10));"'